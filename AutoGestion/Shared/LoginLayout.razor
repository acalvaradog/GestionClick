@using AutoGestion.Theme
@inherits LayoutComponentBase
@inject IJSRuntime JS

<MudThemeProvider Theme="_currentTheme" />
<MudSnackbarProvider />

<MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center" Style="height: 100vh;">
    <div class="d-flex flex-column mud-width-full">
        <MudPaper Elevation="25" Class="pa-8" Width="100%" MaxWidth="500px">
            <br />
            <br />
            <div style="display: flex;  justify-content: center;">
               @*  <img src="./img/logo.png" /> *@
                <img src="./img/logoauto.png" />
            </div>

            @Body
        </MudPaper>
        @if (Installable)
        {

            <MudAlert Severity="Severity.Success" Square="true" Class="my-2" Style="max-width:500px;" Elevation="25">
                Clic aqui
                <MudAvatar Color="Color.Success">
                    <MudIcon Icon="@Icons.Material.Filled.InstallMobile" OnClick="@(() => InstallClicked())" />
                </MudAvatar>
                para Instalar
            </MudAlert>

        }
        <MudAlert Severity="Severity.Info" Class="mt-8 mud-width-full" Style="max-width:500px;" Elevation="25">Si no ha ingresado por primera vez, la contraseña que digite sera la asignada.</MudAlert>
    </div>
</MudContainer>

@code {
    private MudTheme _currentTheme = new AutogestionTheme();
    static bool Installable = false;
    static Action OnInstallable;
    [JSInvokable]
    public static Task PWAInstallable()
    {
        Installable = true;
        OnInstallable.Invoke();
        return Task.CompletedTask;
    }
    ValueTask InstallClicked()
    {
        Installable = false;
        return JS.InvokeVoidAsync("BlazorPWA.installPWA");
    }
    protected override void OnInitialized()
    {
        OnInstallable = () => InvokeAsync(StateHasChanged);
        //   StateHasChanged();
    }
}