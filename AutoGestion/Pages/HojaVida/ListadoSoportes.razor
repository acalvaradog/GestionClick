@page "/listasoportes"
@using Autogestion.Shared.DTO.SoporteHojaVida
@using AutoGestion.Helpers;
@inject IJSRuntime JS
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStore
@using AutoGestion.Helpers;
@using Autogestion.Shared.DTO.Empleado

@inject Microsoft.Extensions.Configuration.IConfiguration config

@if (_loading)

{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Size="Size.Small" Class="my-7" />
}
else

{

    
    <MudGrid>
        @if (_visualizarpdf == false) {
            <MudItem xs="12">
    <MudCardContent>

        <MudTable Items="@ListSoportes">
            <HeaderContent>
                <MudTh>Archivo</MudTh>
                <MudTh>Tipo</MudTh>
             </HeaderContent>
            <RowTemplate>
                <MudTd>
                    <MudTextField @bind-Value="context.NombreArchivo" ReadOnly=true />
                </MudTd>
                <MudTd>
                    <MudTextField @bind-Value="context.TipoSoporte.Nombre" ReadOnly=true />
                    @config["Configuraciones:URLAnexosHojaVida"]
                </MudTd>

                <MudTd>
                            <MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="() => OpenPDF(context.NombreArchivo)">Ver Pdf</MudButton>
         
          </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudCardContent>

        </MudItem>
      
        }else{
            <MudItem xs="12">
                 <MudCardContent>
        <div>
                    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Close" Size="Size.Small" @onclick="ClosePDFViewer" />
        
            <iframe src="@pdfUrl" style="width: 100%; height: 600px;"></iframe>
        </div>
        </MudCardContent>
            </MudItem>
        }
       
    </MudGrid>
}



@code {
    private List<SoporteHojaVidaDTO> ListSoportes { get; set; } = new List<SoporteHojaVidaDTO>();
    private bool _loading = false;
    private EmpleadoReturnSapDTO datosempleado { get; set; }
    private bool _visualizarpdf = false;
    private string pdfUrl;
    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        datosempleado = await localStore.GetItemAsync<EmpleadoReturnSapDTO>("User");
        ListSoportes = await Http.GetFromJsonAsync<List<SoporteHojaVidaDTO>>($"api/SoporteHojaVida/GetSoportes/{datosempleado.Id}");


        _loading = false;
        StateHasChanged();
    }
    void ClosePDFViewer()
    {
        _visualizarpdf = false;
    }
    void OpenPDF(string url)
    {
        pdfUrl = config["Configuraciones:URLAnexosSoportes"] + "/" + url;
        _visualizarpdf = true;
    }
}
