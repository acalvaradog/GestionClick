@page "/noticias"
@using Autogestion.Shared.DTO.Noticia
@using MudBlazor
@inject HttpClient Http

@if (_loading)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Size="Size.Large" Class="my-7" />
    <MudText Align="Align.Center" Typo="Typo.body1">Cargando...</MudText>
}
else
{
    <MudContainer MaxWidth="MaxWidth.Large"  Class="noticias-contenedor">
        @if (noticias != null)
        {
            @foreach (var noticia in noticias)
            {
                <NoticiaCard Noticia="noticia" />  
             
            }
        }
    </MudContainer>
   
}

<style>
    .noticias-contenedor {
        padding: 1.5em;
        background-color: #f5f5f5;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .my-7 {
        margin: 2rem 0;
    }
</style>

@code {
    private List<NoticiaDTO> noticias;
    private bool _loading = false;

    // Llamada para cargar las noticias y sus imágenes
    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        try
        {
            // Supongamos que tenemos un servicio que nos trae las noticias con sus imágenes asociadas
            noticias = await Http.GetFromJsonAsync<List<NoticiaDTO>>($"api/Noticia/GetNoticiasConImagenes");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar noticias: {ex.Message}");
        }
        finally
        {
            _loading = false;
            StateHasChanged();
        }
    }
}
