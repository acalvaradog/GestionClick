@model Adm_AutoGestion.Models.Eventos
@using System.Web.UI.WebControls;


<script src="~/Contents/js/Eventos.js"></script>
<div class="card">
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="row mt-3">
                <div class="col-md-2 col-12">
                    <div class="form-group">
                        <label class="bi bi-upload btn btn-outline-primary rounded-pill mb-2">
                            <span id="labelFile"> Subir Imagen</span>
                            <input type="file" id="Imagen" hidden onchange="mostrarNombreArchivo();" />
                        </label>
                    </div>
                </div>

                <div class="col-md-2 col-12">
                    <button class="bi bi-save btn btn-outline-primary rounded-pill mb-2" type="button" onclick="subirImagen(@Model.Id);"> Guardar Imagen</button>
                </div>
            </div>

            <div class="row mb-3 mt-3">
                <div class="col-12">
                    <img style="width:inherit;height:250px;" alt="No se ha encontrado imagen del evento" src="~/AnexosEventos/@Model.Imagen" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <label>Fecha de Publicacion</label>
                    <div class="col-md-4 col-12">
                        <input class="form-control" style="width:100%" disabled value="@Convert.ToDateTime(Model.FechaPublicacion).ToString("dd 'de' MMMM 'del' yyyy H:mm tt")" />
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <label>Nombre del Evento</label>
                    @Html.EditorFor(model => model.NombreEvento, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-2 col-12">
                    <label>Tipo de Evento</label>
                    @if (Model.TipoEvento == "2")
                    {
                        <input class="form-control" id="TipoEvento" disabled value="Continuo">
                    }
                    else if (Model.TipoEvento == "3")
                    {
                        <input class="form-control" id="TipoEvento" disabled value="Concurrente" />
                    }
                    else
                    {
                        <input class="form-control" id="TipoEvento" disabled value="Unico" />
                    }
                </div>

                <div class="col-md-2 col-12">
                    <label>Dirigido A</label>
                    @if (Model.DirigidoA != "Ambos")
                    {
                        @Html.EditorFor(model => model.DirigidoA, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

                    }
                    else
                    {
                        <input class="form-control" id="DirigidoA" disabled value="Trabajador - Familiar" />
                    }
                </div>

                <div class="col-md-2 col-12">
                    <label>Cupo</label>
                    @if (Model.DirigidoA == "General")
                    {
                        @Html.EditorFor(model => model.Cupo, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Cupo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cupo, "", new { @class = "text-danger" })
                    }
                </div>

                @if (Model.RegistroRequerido == false)
                {
                    <div class="col-md-3 col-12">
                        <label>Fecha Cierre Inscripciones</label>
                        <input type="date" name="FechaCierre" id="FechaCierre" class="form-control" value="@Convert.ToDateTime(Model.FechaCierre).ToString("yyyy-MM-dd")" disabled />
                    </div>

                    <div class="col-md-3 col-12">
                        <label>Hora Cierre Inscripciones</label>
                        <input type="time" name="HoraCierre" id="HoraCierre" class="form-control" value="@Convert.ToDateTime(Model.HoraCierre).ToString("HH:mm")" disabled />
                    </div>
                }
                else
                {
                    <div class="col-md-3 col-12">
                        <label>Fecha Cierre Inscripciones</label>
                        <input type="date" name="FechaCierre" id="FechaCierre" class="form-control" value="@Convert.ToDateTime(Model.FechaCierre).ToString("yyyy-MM-dd")" />
                        @Html.ValidationMessageFor(model => model.FechaCierre, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3 col-12">
                        <label>Hora Cierre Inscripciones</label>
                        <input type="time" name="HoraCierre" id="HoraCierre" class="form-control" value="@Convert.ToDateTime(Model.HoraCierre).ToString("HH:mm")" />
                        @Html.ValidationMessageFor(model => model.HoraCierre, "", new { @class = "text-danger" })
                    </div>
                }
            </div>

            <div class="row mb-3">
                <div class="col-md-3 col-12">
                    <label>Hora de Inicio</label>
                    <input type="time" name="HoraInicio" id="HoraInicio" class="form-control" value="@Convert.ToDateTime(Model.HoraInicio).ToString("HH:mm")" />
                    @Html.ValidationMessageFor(model => model.HoraInicio, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3 col-12">
                    <label>Hora de Finalización</label>
                    <input type="time" name="HoraFin" id="HoraFin" class="form-control" value="@Convert.ToDateTime(Model.HoraFin).ToString("HH:mm")" />
                    @Html.ValidationMessageFor(model => model.HoraFin, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3 col-12">
                    <label>Fecha Inicio</label>
                    <input type="date" name="FechaInicio" id="FechaInicio" class="form-control" onchange="javascript:cambiarFechaFinDetalles();" value="@Convert.ToDateTime(Model.FechaInicio).ToString("yyyy-MM-dd")" />
                    @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3 col-12">
                    <label>Fecha de Finalización</label>
                    @if (Model.TipoEvento == "2")
                    {
                        <input type="date" name="FechaFin" id="FechaFin" class="form-control" value="@Convert.ToDateTime(Model.FechaFin).ToString("yyyy-MM-dd")" />
                        @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        <input type="date" class="form-control" id="FechaFin" value="@Convert.ToDateTime(Model.FechaFin).ToString("yyyy-MM-dd")" disabled />
                    }
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <label>Descripción</label>
                    @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", @rows = "4", @style = "display:flex;width:100%" })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mt-3">
                <div class="d-flex justify-content-center">
                    <button type="submit" class="bi bi-plus-square btn btn-outline-primary rounded-pill me-3 mb-2"> Guardar</button>
                    <button type="button" class="bi bi-box-arrow-in-left btn btn-outline-primary rounded-pill mb-2" data-bs-dismiss="modal"> Atras</button>
                </div>
            </div>
        }
    </div>
</div>

    <script>
        function mostrarNombreArchivo() {
            var file = $("#Imagen").get(0).files;
            var archivo = file[0];
            var texto = document.getElementById('labelFile');

            texto.innerHTML = " Archivo subido: " + archivo.name;

        }
    </script>

    <script>
        function subirImagen(id) {
            var EventoId = id;
            var file = $("#Imagen").get(0).files;
            try {
                var frmData = new FormData();
                frmData.append("Imagen", file[0]);
                frmData.append("EventoId", EventoId);

                $.ajax({
                    url: "ActualizarImagen",
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    data: frmData,
                    contentType: false,
                    processData: false,
                    success: function (result) {
                        if (result == "true") {
                            alertify.alert('Los datos se guardaron correctamente.');
                        } else {
                            alertify.alert(result)
                        }
                    }
                });
            } catch (err) {
                alertify.alert(err);
            }

        }
    </script>
