
@model Adm_AutoGestion.Models.Tercero
@using System.Web.UI.WebControls;

@{
    string message = string.Format("{0}", Session["message"]);

}


@{var Estudiante = new List<ListItem> {
        new ListItem { Text = "SI", Value = "SI" },
        new ListItem { Text = "NO", Value = "NO" }
        };
}

@if (!string.IsNullOrWhiteSpace(message))
{

    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <h4 class="alert-heading">Mensaje:</h4>
        <hr>
        <p class="mb-0">@message</p>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span>
    </div>
    Session.Remove("message");
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)



    <fieldset>
        <form action="~/EncabezadoPrestamo/GuardarTercero">
            <div class="container">
                <div class="row">

                    <div class="col-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Documento, htmlAttributes: new { @class = "col-form-label-sm" })
                            @Html.TextBoxFor(model => model.Documento, null, htmlAttributes: new { @class = "form-control form-control-sm", value = "", autofocus = true, @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Documento)
                        </div>
                    </div>

                    <div class="col-8">
                        <div class="form-group">
                            @* @Html.LabelFor(model => model.Activo)*@
                            @Html.TextBoxFor(model => model.Activo, null, htmlAttributes: new { @class = "form-control form-control-sm", autofocus = true, @Value = "SI", @type = "hidden" })
                            @Html.ValidationMessageFor(model => model.Activo)
                        </div>
                    </div>

                    <div class="col-3">
                        <div class="editor-label col-form-label-sm">
                            Primer Apellido:
                        </div>
                        <div class="form-group">
                            <input type="" id="PrimerApellido" name="PrimerApellido" class="form-control form-control-sm text-uppercase" />

                        </div>

                    </div>

                    <div class="col-3">
                        <div class="editor-label col-form-label-sm">
                            Segundo Apellido:
                        </div>
                        <div class="form-group">
                            <input type="" id="SegundoApellido" name="SegundoApellido" class="form-control form-control-sm text-uppercase" />

                        </div>

                    </div>

                    <div class="col-3">
                        <div class="editor-label col-form-label-sm">
                            Primer Nombre:
                        </div>
                        <div class="form-group">
                            <input type="" id="PrimerNombre" name="PrimerNombre" class="form-control form-control-sm text-uppercase" />

                        </div>

                    </div>

                    <div class="col-3">
                        <div class="editor-label col-form-label-sm">
                            Segundo Nombre:
                        </div>
                        <div class="form-group">
                            <input type="" id="SegundoNombre" name="SegundoNombre" class="form-control form-control-sm text-uppercase" />

                        </div>

                    </div>
                    <div class="col-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "col-form-label-sm" })
                            @Html.TextBoxFor(model => model.FechaNacimiento, null, htmlAttributes: new { @class = "form-control form-control-sm", autofocus = true, type = "date" })
                            @Html.ValidationMessageFor(model => model.FechaNacimiento)
                        </div>
                    </div>

                    <div class="col-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "col-form-label-sm" })
                            @Html.TextBoxFor(model => model.Direccion, null, htmlAttributes: new { @class = "form-control form-control-sm text-uppercase", autofocus = true })
                            @Html.ValidationMessageFor(model => model.Direccion)
                        </div>
                    </div>

                    <div class="col-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "col-form-label-sm" })
                            @Html.TextBoxFor(model => model.Telefono, null, htmlAttributes: new { @class = "form-control form-control-sm", autofocus = true, type = "number" })
                            @Html.ValidationMessageFor(model => model.Telefono)
                        </div>
                    </div>

                    <div class="col-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CorreoPersonal, htmlAttributes: new { @class = "col-form-label-sm" })
                            @Html.TextBoxFor(model => model.CorreoPersonal, null, htmlAttributes: new { @class = "form-control form-control-sm", autofocus = true, type = "email" })
                            @Html.ValidationMessageFor(model => model.CorreoPersonal)
                        </div>
                    </div>

                    <div class="col-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "col-form-label-sm" })
                            @* @Html.DropDownList("Area", (List<SelectListItem>)ViewBag.Area, "--Seleccione Area--", new { @class = "form-control form-control-sm  js-example-basic-single select2-selection select2-selection--single",data_live_search="true"})*@
                            @Html.DropDownList("Area", new SelectList(ViewBag.Area, "Value", "Text"), "Seleccione Area...", htmlAttributes: new { @class = "form-control form-control-sm", data_live_search = "true" })
                            @Html.ValidationMessageFor(model => model.Area)
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Superior, htmlAttributes: new { @class = "col-form-label-sm" })
                            @Html.DropDownListFor(model => model.Superior, new SelectList(ViewBag.Jefe, "CodigoEmpleado", "Nombres"), "--Seleccione Jefe--", htmlAttributes: new { @class = "form-control form-control-sm js-example-basic-single select2-selection select2-selection--single", data_live_search = "true" })
                            @Html.ValidationMessageFor(model => model.Superior)
                        </div>
                    </div>

                    <div class="col-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cargo, htmlAttributes: new { @class = "col-form-label-sm" })
                            @Html.DropDownListFor(model => model.Cargo, (List<SelectListItem>)ViewBag.Cargo, "Seleccione Cargo...", new { @class = "form-control form-control-sm js-example-basic-single select2-selection select2-selection--single", data_live_search = "true" })
                            @Html.ValidationMessageFor(model => model.Cargo)
                        </div>
                    </div>

                    <div class="col-4">
                        <div class="form-group">
                            <label class="col-form-label-sm" for="">Estudiante:</label>
                            @Html.DropDownList("Estudiante", new SelectList(Estudiante, "Value", "Text"), "Seleccione Estudiante...", htmlAttributes: new { @class = "form-control form-control-sm " })
                        </div>
                    </div>

                    <div class="col-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FechaIngreso, htmlAttributes: new { @class = "col-form-label-sm" })
                            @Html.TextBoxFor(model => model.FechaIngreso, null, htmlAttributes: new { @class = "form-control form-control-sm", autofocus = true, type = "date" })
                            @Html.ValidationMessageFor(model => model.FechaIngreso)
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FechaFin, htmlAttributes: new { @class = "col-form-label-sm" })
                            @Html.TextBoxFor(model => model.FechaFin, null, htmlAttributes: new { @class = "form-control form-control-sm", autofocus = true, type = "date" })
                            @Html.ValidationMessageFor(model => model.FechaFin)
                        </div>
                    </div>




                    <div class="col-12 d-flex m-4 justify-content-center">
                        <div class="form-group  ">
                            <p>
                                @*<input type="submit" value="Guardar Registro" class="btn btn-info btn-sm" />*@
                                <button type="button" class="bi bi-bookmark-plus btn btn-outline-success btn-sm ml-3" id="btnTercero" onclick="javascript: return SaveTercero();"> Guardar</button>
                                <button type="button" class="bi bi-bookmark-x btn btn-outline-warning btn-sm ml-3" data-dismiss="modal"> Cerrar </button>
                            </p>
                        </div>
                    </div>
                </div>
            </div>

        </form>
    </fieldset>
}

<script>




    $(document).ready(function () {
        $("#Estudiante").change(function () {
            var Estudiante = $("#Estudiante").val();
            if (Estudiante == "SI") {
                $("#FechaIngreso").prop('disabled', false);
                $("#FechaFin").prop('disabled', false);
            } else {
                $("#FechaIngreso").prop('disabled', true);
                $("#FechaFin").prop('disabled', true);
            }

        })

        $('.js-example-basic-single').selectpicker({ width: '100%', theme: "classic" });
        $('#Area').selectpicker({
            dropdownParent: $('#modal_Solicitante')
        });
    });

</script>





